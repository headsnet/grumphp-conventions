
parameters:
    convention.EXEC_GRUMPHP_COMMAND: 'docker run -i --rm --name my-running-script -v "$PWD":/app -w /app php:8.1-cli'
    convention.git_blacklist.keywords: [ 'die\\(', 'dd\\(', 'dump\\(', 'var_dump\\(', 'exit;' ]
    convention.git_branch_name.blacklist: [ master, main ]
    convention.git_branch_name.whitelist: [ ]
    convention.gitlab_lint.api_token: 'MY TOKEN'
    convention.gitlab_lint.gitlab_url: 'gitlab.com/api/v4/projects/:id'
    convention.gitlab_lint.gitlab_file: '.gitlab-ci.yml'
    convention.doctrine_schema_check.command: './bin/console doctrine:schema:validate --skip-sync'
    convention.lint_twig.command: './bin/console lint:twig templates'
    convention.lint_yaml.command: './bin/console lint:yaml --parse-tags src config tests translations'

grumphp:

    git_hook_variables:
        EXEC_GRUMPHP_COMMAND: '%convention.EXEC_GRUMPHP_COMMAND%'
    stop_on_failure: true

    # Disable the ASCII artwork that takes up too much space in the console output
    ascii:
        failed: ~
        succeeded: ~

    tasks:
        composer: ~      # Runs "composer validate" to check the file when it's been changed
        composer_normalize: ~
        doctrine_schema_check:
            scripts: [ [ '-c', '%convention.doctrine_schema_check.command%' ] ]
            triggered_by: [ xml, yaml, php ]
            metadata: { task: shell }
        ecs:
            config: ecs.php
        git_blacklist:
            keywords: '%convention.git_blacklist.keywords%'
        git_branch_name:
            blacklist: '%convention.git_branch_name.blacklist%'
            whitelist: '%convention.git_branch_name.whitelist%'
        git_commit_message:
            max_subject_width: 72 # The old-school convention of 65 characters is way too limited
            max_body_width: 72
        gitlab_lint:
            api_token: '%convention.gitlab_lint.api_token%'
            gitlab_url: '%convention.gitlab_lint.gitlab_url%'
            gitlab_file: '%convention.gitlab_lint.gitlab_file%'
        lint_twig:
            scripts: [["-c", '%convention.lint_twig.command%']]
            triggered_by: [ twig ]
            metadata: { task: shell }
        lint_yaml:
            scripts: [[ "-c", '%convention.lint_yaml.command%' ]]
            triggered_by: [ yaml, yml ]
            metadata: { task: shell }
        phpstan:
            configuration: phpstan.neon
        phpstan_all:
            configuration: phpstan.neon
            use_grumphp_paths: false
            metadata: { task: phpstan }
        phpunit:
            testsuite: Unit
        phpunit_all:
            testsuite: Unit,Integration
            metadata: { task: paratest }

    extensions:
        - Headsnet\GrumPHP\GitlabLint\Loader

    testsuites:
        git_commit_msg:
            tasks:
                - git_commit_message
        git_pre_commit:
            tasks:
                - git_branch_name # This should go first for maximum fail-fast
                - git_blacklist
                - ecs
                - phpstan
                - phpunit
                - composer
                - composer_normalize
                - lint_twig
                - lint_yaml
                - gitlab_lint
        my_pre_push:
            tasks:
                - phpunit_all
                - doctrine_schema_check
                - phpstan_all

    fixer:
        enabled: true
        fix_by_default: true
